# Generated by Django 2.0.6 on 2018-07-01 02:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tft.models.order


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Eq',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=8, verbose_name='装置名')),
            ],
            options={
                'verbose_name': '装置',
                'verbose_name_plural': '装置',
            },
        ),
        migrations.CreateModel(
            name='EqKind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=3, verbose_name='装置类别')),
            ],
            options={
                'verbose_name': '装置类别',
                'verbose_name_plural': '装置类别',
            },
        ),
        migrations.CreateModel(
            name='Lot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=8, null=True, verbose_name='批次')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '批次',
                'verbose_name_plural': '批次',
            },
        ),
        migrations.CreateModel(
            name='LotInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(max_length=3, verbose_name='机种')),
                ('size', models.CharField(max_length=3, verbose_name='大小')),
                ('height', models.CharField(max_length=4, verbose_name='高度')),
            ],
            options={
                'verbose_name': '机种信息',
                'verbose_name_plural': '机种信息',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.CharField(default=tft.models.order.default_order_sn, max_length=50, unique=True, verbose_name='订单编号')),
                ('status', models.CharField(default='0', max_length=5, verbose_name='当前状态')),
                ('found_time', models.DateTimeField(verbose_name='发现时间')),
                ('kind', models.CharField(max_length=5, verbose_name='停机机种')),
                ('reason', models.CharField(max_length=30, verbose_name='停机原因')),
                ('desc', models.TextField(max_length=200, verbose_name='异常描述')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='受害开始时间')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='受害结束时间')),
                ('report', models.FileField(blank=True, null=True, upload_to='reports/%Y/%m/%d/', verbose_name='调查报告')),
                ('lot_num', models.PositiveSmallIntegerField(verbose_name='受害批次数')),
                ('recover_condition', models.TextField(max_length=200, verbose_name='复机条件')),
                ('product_sign_time', models.DateTimeField(auto_now_add=True, verbose_name='生产签停时间')),
                ('related_sign_time', models.DateTimeField(auto_now_add=True, verbose_name='责任工程签停时间')),
                ('is_rejected', models.BooleanField(default=False, verbose_name='是否拒签')),
                ('reason_rejected', models.TextField(verbose_name='拒签理由')),
                ('apply_time', models.DateTimeField(verbose_name='复机签复时间')),
                ('solution', models.TextField(verbose_name='责任单位对策说明')),
                ('pre_lot_solution', models.TextField(verbose_name='先行批次结果说明')),
                ('qc_sign_time', models.DateTimeField(verbose_name='品质签复时间')),
                ('product_time', models.DateTimeField(verbose_name='生产签复时间')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='开单时间')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='最近更新')),
                ('apply_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='apply_recover_orders', to=settings.AUTH_USER_MODEL)),
                ('eq', models.ManyToManyField(related_name='open_orders', to='tft.Eq', verbose_name='停机设备')),
            ],
            options={
                'verbose_name': '订单',
                'verbose_name_plural': '订单',
            },
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=5, verbose_name='工程站点')),
                ('eq', models.ManyToManyField(blank=True, related_name='steps', to='tft.Eq', verbose_name='装置')),
            ],
            options={
                'verbose_name': '工程站点',
                'verbose_name_plural': '工程站点',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='found_step',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders_find', to='tft.Step', verbose_name='发现站点'),
        ),
        migrations.AddField(
            model_name='order',
            name='lots',
            field=models.ManyToManyField(blank=True, related_name='_order_lots_+', to='tft.Lot', verbose_name='异常批次'),
        ),
        migrations.AddField(
            model_name='order',
            name='notice_process_user',
            field=models.ManyToManyField(blank=True, related_name='_order_notice_process_user_+', to=settings.AUTH_USER_MODEL, verbose_name='通知制程人员'),
        ),
        migrations.AddField(
            model_name='order',
            name='notice_product_user',
            field=models.ManyToManyField(blank=True, related_name='_order_notice_product_user_+', to=settings.AUTH_USER_MODEL, verbose_name='通知生产人员'),
        ),
        migrations.AddField(
            model_name='order',
            name='open_order_department',
            field=models.ManyToManyField(blank=True, related_name='open_orders', to='auth.Group', verbose_name='开单部门'),
        ),
        migrations.AddField(
            model_name='order',
            name='open_order_department_r',
            field=models.ManyToManyField(blank=True, related_name='open_orders_r', to='auth.Group', verbose_name='责任部门'),
        ),
        migrations.AddField(
            model_name='order',
            name='open_order_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='open_orders', to=settings.AUTH_USER_MODEL, verbose_name='申请人'),
        ),
        migrations.AddField(
            model_name='order',
            name='product_signer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='生产领班签停'),
        ),
        migrations.AddField(
            model_name='order',
            name='product_signer_r',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_recover_orders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='order',
            name='qc_signer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='qc_recover_orders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='order',
            name='recipe_close',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Recipe 关闭人员'),
        ),
        migrations.AddField(
            model_name='order',
            name='recipe_close_confirm',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Recipe 确认人员'),
        ),
        migrations.AddField(
            model_name='order',
            name='related_signer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='责任工程签停'),
        ),
        migrations.AddField(
            model_name='order',
            name='step',
            field=models.ManyToManyField(blank=True, related_name='open_orders', to='tft.Step', verbose_name='停机站点'),
        ),
        migrations.AddField(
            model_name='lot',
            name='info',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lots', to='tft.LotInfo', verbose_name='机种信息'),
        ),
        migrations.AddField(
            model_name='eq',
            name='kind',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='eqs', to='tft.EqKind', verbose_name='装置类别'),
        ),
    ]
